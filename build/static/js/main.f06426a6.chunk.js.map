{"version":3,"sources":["components/commons/navbar.jsx","services/appService.jsx","components/pages/showAllForms.jsx","components/reuseable/mapElements/lib/arePathsEqual.js","components/reuseable/mapElements/Polygon.js","components/reuseable/mapElements/lib/String.js","components/reuseable/mapComponent.jsx","components/pages/showSpeceficForm.jsx","components/pages/startPage.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","require","state","collapsed","toggleCollapsed","isNavbarButtonClicked","props","setState","smallView","style","float","direc","width","backgroundColor","defaultSelectedKeys","defaultOpenKeys","mode","theme","textAlign","inlineCollapsed","Item","key","to","color","type","marginRight","checkedChildren","unCheckedChildren","marginTop","marginLeft","display","onChange","onDirectChange","checked","BigView","height","onClick","this","smallSize","React","Component","appService","url","getAllForms","axios","get","getSpeceficFormById","id","postNewForm","newForm","post","postComplitedFormByClient","ComplitedForm","ShowAllForms","columns","data","headerFixer","title","dataIndex","align","render","text","record","handleShow","rolebasedButtonCreater","then","res","forms","sort","a","b","number","role","dataSource","bordered","tableLayout","size","history","push","isValidLatLng","elem","hasOwnProperty","Polygon","polygonPromise","wrappedPromise","promise","Promise","resolve","reject","bind","catch","renderPolygon","prevProps","map","pathA","pathB","Array","isArray","length","i","lat","lng","arePathsEqual","paths","polygon","setMap","google","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","params","maps","evt","e","evtName","split","word","charAt","toUpperCase","slice","join","defaultProps","name","MapComponent","lastId","clickHandler","marker","newPoints","points","latLng","pointId","console","log","itemId","onMarkerClick","position","index","findIndex","x","splice","drawPolygon","zoom","initialCenter","GoogleApiWrapper","apiKey","Option","Select","ShowSpeceficForm","firstTimeForSetState","form","ElementValues","formBuilder","jsxElementArray","fields","required","hasOptions","htmlFor","placeholder","SelectOptionOnChangeHandeler","options","value","label","inputOnChangeHandeler","Value","inputNumberOnChangeHandeler","direction","defaultValue","DatePickerOnChangeHandeler","marginBottom","LocationOnClickHandeler","intialStateBuilder","target","getAttribute","_d","submitForm","service","checker","formatOutput","notification","success","message","description","placement","error","tempRes","elementName","answer","match","margin","padding","StartPage","handleSubmit","preventDefault","validateFields","err","values","localStorage","setItem","tokenName","window","location","reload","getFieldDecorator","left","right","top","bottom","maxWidth","maxHeight","overflow","onSubmit","className","rules","prefix","htmlType","jwt","App","formCreaterState","Elements","span","path","getRole","directHandler","navbarButtonResizeViewClickHandler","zIndex","formCreaterStateFixHandeler","st","addEventListener","resize","resizeRes","innerWidth","getItem","checkIfTokenIsExpired","WrappedNormalLoginForm","Form","create","logUserOutInExpirtim","isExpired","decodedToken","getDecodedToken","secondsSinceEpoch","Math","round","Date","now","payload","exp","token","decode","complete","setInterval","Role","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f06426a6.chunk.js","sourcesContent":["// export default NavBar;\nimport { Menu, Icon, Button, Switch } from \"antd\";\nimport React from \"react\";\nimport Sticky from \"react-sticky-el\";\nimport { Link } from \"react-router-dom\";\nvar jwt = require(\"jsonwebtoken\");\nclass NavBar extends React.Component {\n  state = {\n    collapsed: false\n  };\n\n  toggleCollapsed = () => {\n    const { isNavbarButtonClicked } = this.props;\n    isNavbarButtonClicked();\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    const { smallSize } = this.props;\n    if (smallSize === \"true\") {\n      return this.smallView();\n    } else {\n      return this.BigView();\n    }\n  }\n  smallView = () => {\n    return (\n      <Sticky>\n        <div\n          style={{\n            float: this.props.direc === \"rtl\" ? \"right\" : \"left\",\n            width: \"100%\",\n            backgroundColor: \"#001529\"\n          }}\n        >\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"horizontal\"\n            theme=\"dark\"\n            style={{\n              textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n            }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <Menu.Item key=\"1\">\n              <Link to=\"/ShowAllForms\" style={{ color: \"white\" }}>\n                <Icon type=\"desktop\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"مشاهده\" : \"Show\"}\n                </span>\n              </Link>\n            </Menu.Item>\n            {/* <Menu.Item key=\"2\">\n              <Link to=\"/FormCreater\" style={{ color: \"white\" }}>\n                <Icon type=\"form\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"فرم ساخت\" : \"Creating Form\"}\n                </span>\n              </Link>\n            </Menu.Item> */}\n\n            <Switch\n              checkedChildren=\"Fa\"\n              unCheckedChildren=\"En\"\n              style={{\n                float: this.props.direc === \"rtl\" ? \"left\" : \"right\",\n                marginTop: \"10px\",\n                marginLeft: \"20px\",\n                marginRight: \"20px\",\n                display: \"block\"\n              }}\n              onChange={this.props.onDirectChange}\n              checked={this.props.direc === \"rtl\" ? true : false}\n            />\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  };\n  BigView = () => {\n    return (\n      <Sticky>\n        <div\n          style={{\n            float: this.props.direc === \"rtl\" ? \"right\" : \"left\",\n            width: \"100%\",\n            height: \"100vh\"\n          }}\n        >\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100%\",\n              textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n            }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <Button\n              type=\"primary\"\n              onClick={this.toggleCollapsed}\n              style={{\n                marginTop: \"2%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                display: \"block\"\n              }}\n            >\n              <Icon type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"} />\n            </Button>\n\n            <Menu.Item key=\"1\">\n              <Link to=\"/ShowAllForms\" style={{ color: \"white\" }}>\n                <Icon type=\"desktop\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"مشاهده\" : \"Show\"}\n                </span>\n              </Link>\n            </Menu.Item>\n            {/* <Menu.Item key=\"2\">\n              <Link to=\"/FormCreater\" style={{ color: \"white\" }}>\n                <Icon type=\"form\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"فرم ساخت\" : \"Creating Form\"}\n                </span>\n              </Link>\n            </Menu.Item> */}\n\n            <Switch\n              checkedChildren=\"Fa\"\n              unCheckedChildren=\"En\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                display: \"block\"\n              }}\n              onChange={this.props.onDirectChange}\n              checked={this.props.direc === \"rtl\" ? true : false}\n            />\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  };\n}\n\nexport default NavBar;\n","import axios from \"axios\";\nclass appService {\n  url = \"http://localhost:5000\";\n  //url = \"http://hw2-ie-back-master.herokuapp.com\";\n\n  getAllForms = () => {\n    return axios.get(this.url + \"/api/forms\");\n  };\n  getSpeceficFormById = id => {\n    return axios.get(this.url + \"/api/forms/\" + id);\n  };\n  postNewForm = newForm => {\n    return axios.post(this.url + \"/api/forms\", newForm);\n  };\n  postComplitedFormByClient = (ComplitedForm, id) => {\n    return axios.post(this.url + \"/api/forms/\" + id, ComplitedForm);\n  };\n}\n\nexport default appService;\n//https://hw2-ie-front-master.herokuapp.com/ | https://git.heroku.com/hw2-ie-front-master.git\n//https://github.com/ElyosCeasar/hw2_ie_front-master\n","import { Table, Button } from \"antd\";\nimport React from \"react\";\nimport appService from \"../../services/appService\";\nvar jwt = require(\"jsonwebtoken\");\nclass ShowAllForms extends React.Component {\n  columns = [];\n  state = {\n    data: []\n  };\n  // data = [\n  //   {\n  //     key: \"1\",\n  //     name: \"فرم ثبت نام دانشجو\",\n  //     number: 1\n  //   },\n  //   {\n  //     key: \"2\",\n  //     name: \"فرم انتخاب واحد\",\n  //     number: 2\n  //   },\n  //   {\n  //     key: \"3\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 3\n  //   },\n  //   {\n  //     key: \"4\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 4\n  //   },\n  //   {\n  //     key: \"5\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 5\n  //   },\n  //   {\n  //     key: \"6\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 6\n  //   },\n  //   {\n  //     key: \"7\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 7\n  //   },\n  //   {\n  //     key: \"8\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 8\n  //   },\n  //   {\n  //     key: \"9\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 9\n  //   },\n  //   {\n  //     key: \"10\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 10\n  //   },\n  //   {\n  //     key: \"11\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 11\n  //   },\n  //   {\n  //     key: \"12\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 12\n  //   }\n  // ];\n  componentDidMount() {\n    const service = new appService();\n    service.getAllForms().then(res => {\n      let data = res.data.forms.sort((a, b) => {\n        if (a.number < b.number) {\n          return 1;\n        }\n        if (a.number > b.number) {\n          return -1;\n        }\n        return 0;\n      });\n      this.setState({ data: data });\n    });\n  }\n\n  headerFixer = () => {\n    this.columns = [\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"شماره فرم\" : \"form number\"}\n          </span>\n        ),\n        dataIndex: \"number\",\n        key: \"number\",\n        width: \"15%\",\n        align: \"center\",\n\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\n      },\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"نام فرم\" : \"form name\"}\n          </span>\n        ),\n        dataIndex: \"name\",\n        key: \"name\",\n        width: \"70%\",\n        align: \"center\",\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\n      },\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"عملیات\" : \"َAction\"}\n          </span>\n        ),\n        width: \"15%\",\n        align: \"center\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <Button type=\"primary\" onClick={() => this.handleShow(record.key)}>\n              {this.rolebasedButtonCreater()}\n            </Button>\n          </span>\n        )\n      }\n    ];\n  };\n  rolebasedButtonCreater() {\n    const role = this.props.role;\n    if (role === \"fieldAgent\") {\n      return this.props.direc === \"rtl\" ? \"پر کردن\" : \"fill\";\n    } else {\n      //control center\n      return this.props.direc === \"rtl\" ? \"مشاهده\" : \"show\";\n    }\n  }\n\n  render() {\n    this.headerFixer();\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"3px\", marginLeft: \"3px\" }}>\n          {this.props.direc === \"rtl\"\n            ? \"مشاهده تمام فرم های موجود\"\n            : \"Showing all forms\"}\n        </h3>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          style={{\n            backgroundColor: \"white\"\n          }}\n          bordered=\"true\"\n          tableLayout=\"auto\"\n          size=\"middle\"\n        />\n      </div>\n    );\n    // return <Table columns={this.columns} dataSource={this.data} />;\n  }\n  handleShow(id) {\n    this.props.history.push(\"/ShowSpeceficForm/\" + id);\n  }\n}\n\nexport default ShowAllForms;\n","/**\n * Compares two path arrays of LatLng objects.\n */\n\nexport const arePathsEqual = function(pathA, pathB) {\n  if (pathA === pathB) {\n    return true;\n  }\n  if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n    return false;\n  }\n  if (pathA.length !== pathB.length) {\n    return false;\n  }\n  for (let i = 0; i < pathA.length; ++i) {\n    if (pathA[i] === pathB[i]) {\n      continue;\n    }\n    if (\n      !isValidLatLng(pathA[i]) ||\n      !isValidLatLng(pathB[i])\n    ) {\n      return false;\n    }\n    if (\n      pathB[i].lat !== pathA[i].lat ||\n      pathB[i].lng !== pathA[i].lng\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Helper that checks whether an array consists of objects\n * with lat and lng properties\n * @param {object} elem the element to check\n * @returns {boolean} whether or not it's valid\n */\nconst isValidLatLng = function(elem) {\n  return (\n    elem !== null &&\n    typeof elem === 'object' &&\n    elem.hasOwnProperty('lat') &&\n    elem.hasOwnProperty('lng')\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { arePathsEqual } from \"./lib/arePathsEqual\";\nimport { camelize } from \"./lib/String\";\n//  const evtNames = [\"click\", \"mouseout\", \"mouseover\"];\n// const evtNames = [];\n// window.onload = function() {\n//   evtNames.push(\"click\");\n//   evtNames.push(\"mouseout\");\n//   evtNames.push(\"mouseover\");\n// };\nconst wrappedPromise = function() {\n  var wrappedPromise = {},\n    promise = new Promise(function(resolve, reject) {\n      wrappedPromise.resolve = resolve;\n      wrappedPromise.reject = reject;\n    });\n  wrappedPromise.then = promise.then.bind(promise);\n  wrappedPromise.catch = promise.catch.bind(promise);\n  wrappedPromise.promise = promise;\n\n  return wrappedPromise;\n};\n\nexport class Polygon extends React.Component {\n  componentDidMount() {\n    this.polygonPromise = wrappedPromise();\n    this.renderPolygon();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.map !== prevProps.map ||\n      !arePathsEqual(this.props.paths, prevProps.paths)\n    ) {\n      if (this.polygon) {\n        this.polygon.setMap(null);\n      }\n      this.renderPolygon();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.polygon) {\n      this.polygon.setMap(null);\n    }\n  }\n\n  renderPolygon() {\n    const {\n      map,\n      google,\n      paths,\n      strokeColor,\n      strokeOpacity,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      ...props\n    } = this.props;\n\n    if (!google) {\n      return null;\n    }\n\n    const params = {\n      map,\n      paths,\n      strokeColor,\n      strokeOpacity,\n      strokeWeight,\n      fillColor,\n      fillOpacity,\n      ...props\n    };\n\n    this.polygon = new google.maps.Polygon(params);\n\n    // evtNames.forEach(e => {\n    //   this.polygon.addListener(e, this.handleEvent(e));\n    // });\n\n    this.polygonPromise.resolve(this.polygon);\n  }\n\n  getPolygon() {\n    return this.polygonPromise;\n  }\n\n  handleEvent(evt) {\n    return e => {\n      const evtName = `on${camelize(evt)}`;\n      if (this.props[evtName]) {\n        this.props[evtName](this.props, this.polygon, e);\n      }\n    };\n  }\n\n  render() {\n    return null;\n  }\n}\n\nPolygon.propTypes = {\n  paths: PropTypes.array,\n  strokeColor: PropTypes.string,\n  strokeOpacity: PropTypes.number,\n  strokeWeight: PropTypes.number,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number\n};\n\n//evtNames.forEach(e => (Polygon.propTypes[e] = PropTypes.func));\n\nPolygon.defaultProps = {\n  name: \"Polygon\"\n};\n\nexport default Polygon;\n","export const camelize = function(str) {\n  return str.split(' ').map(function(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join('');\n}\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\nimport Polygon from \"./mapElements/Polygon\";\n\nclass MapComponent extends Component {\n  lastId = 0;\n  render() {\n    // console.log(\"x\");\n    return (\n      <Map\n        google={this.props.google}\n        zoom={10}\n        style={{ width: \"30%\", height: \"300px\" }}\n        initialCenter={{ lat: 35.715298, lng: 51.404343 }}\n        onClick={this.clickHandler}\n      >\n        {this.drawPolygon()}\n        {this.props.points.map(x => (\n          <Marker\n            onClick={this.onMarkerClick}\n            name={\"Current location\"}\n            position={{ lat: x.lat, lng: x.lng }}\n            id={x.pointId}\n            key={x.pointId}\n          />\n        ))}\n      </Map>\n    );\n  }\n  clickHandler = (props, marker, e) => {\n    // console.log(\"lng\", e.latLng.lng());\n    //   console.log(\"lat\", e.latLng.lat());\n    let newPoints = [...this.props.points];\n    newPoints.push({\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n      pointId: this.lastId\n    });\n    this.lastId = this.lastId + 1;\n    console.log(\"z\", newPoints);\n    this.props.clickHandler(this.props.itemId, newPoints);\n  };\n  onMarkerClick = evt => {\n    const pos = evt.position;\n    const index = this.props.points.findIndex(x => {\n      return x.pointId === evt.id;\n    });\n    let newPoints = [...this.props.points];\n    newPoints.splice(index, 1);\n    this.props.clickHandler(this.props.itemId, newPoints);\n  };\n  drawPolygon = () => {\n    if (this.props.points.length >= 3) {\n      return (\n        <Polygon\n          paths={this.props.points}\n          strokeColor=\"#0000FF\"\n          strokeOpacity={0.8}\n          strokeWeight={2}\n          fillColor=\"#0000FF\"\n          fillOpacity={0.35}\n        />\n      );\n    }\n  };\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\"\n})(MapComponent);\n","import React, { Component } from \"react\";\n\nimport appService from \"../../services/appService\";\nimport {\n  Button,\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  notification\n} from \"antd\";\nimport MapComponent from \"../reuseable/mapComponent\";\nconst { Option } = Select;\nclass ShowSpeceficForm extends Component {\n  firstTimeForSetState = true;\n  state = {\n    form: {},\n    ElementValues: []\n  };\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const service = new appService();\n    service\n      .getSpeceficFormById(id)\n      .then(res => this.setState({ form: res.data.form }));\n\n    // .then(res => console.log(res.data.form));\n  }\n  componentDidUpdate() {\n    if (this.state.form.fields && this.firstTimeForSetState) {\n      this.intialStateBuilder();\n      this.firstTimeForSetState = false;\n    }\n  }\n\n  render() {\n    console.log(this.state.ElementValues);\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"20px\", marginLeft: \"20px\" }}>\n          {this.props.direc === \"rtl\"\n            ? \"مشاهده و پر کردن فرم\"\n            : \"Show And Fill\"}\n        </h3>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            margin: \"20px\",\n            padding: 10\n          }}\n        >\n          <h4>{this.state.form.title}</h4>\n\n          {this.formBuilder()}\n          <Button\n            type=\"primary\"\n            style={{\n              display: \"block\",\n              marginTop: \"20px\",\n              marginBottom: \"10px\"\n            }}\n            onClick={this.submitForm}\n          >\n            {this.props.direc === \"rtl\" ? \"ثبت\" : \"confirm\"}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  formBuilder = () => {\n    let jsxElementArray = [];\n    if (this.state.form.fields) {\n      let fields = [...this.state.form.fields];\n      let ElementValues = [...this.state.ElementValues];\n\n      for (let i = 0; i < fields.length; i++) {\n        const color = fields[i].required === \"true\" ? \"#ffffb3\" : \"white\";\n        if (!fields[i].hasOptions) {\n          switch (fields[i].type) {\n            case \"Text\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <Input\n                    id={fields[i].name}\n                    style={{\n                      width: \"80%\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color\n                    }}\n                    value={ElementValues[i]}\n                    itemId={i}\n                    key={i}\n                    onChange={this.inputOnChangeHandeler}\n                  ></Input>\n                </div>\n              );\n              break;\n            case \"Number\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <InputNumber\n                    id={fields[i].name}\n                    style={{\n                      width: \"20%\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color\n                    }}\n                    Value={ElementValues[i]}\n                    // defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    onChange={e => this.inputNumberOnChangeHandeler(e, i)}\n                  ></InputNumber>\n                </div>\n              );\n              break;\n            case \"Date\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <DatePicker\n                    id={fields[i].name}\n                    style={{\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color,\n                      direction: \"ltr\"\n                    }}\n                    Value={ElementValues[i]}\n                    defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    onChange={e => this.DatePickerOnChangeHandeler(e, i)}\n                  ></DatePicker>\n                </div>\n              );\n              break;\n            case \"Location\":\n              jsxElementArray.push(\n                <div\n                  style={{\n                    marginTop: \"20px\",\n                    display: \"block\",\n                    height: \"300px\",\n                    marginBottom: \"40px\"\n                  }}\n                >\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <MapComponent\n                    id={fields[i].name}\n                    defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    points={ElementValues[i]}\n                    clickHandler={this.LocationOnClickHandeler}\n                  ></MapComponent>\n                </div>\n              );\n              break;\n            default:\n              console.log(\"form element not found\");\n          }\n        } else {\n          jsxElementArray.push(\n            <div style={{ marginTop: \"20px\", display: \"block\" }}>\n              <label htmlFor={fields[i].name}>\n                {fields[i].required === \"true\" ? \"*\" : \"\"}\n                {fields[i].title} :\n              </label>\n\n              <Select\n                style={{\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\",\n                  backgroundColor: color,\n                  width: \"300px\",\n                  textAlign: \"center\"\n                }}\n                placeholder={\n                  this.props.direc === \"rtl\"\n                    ? \"گزینه ی مد نظر خودر انتخاب کنید\"\n                    : \"select an option\"\n                }\n                itemId={i}\n                key={i}\n                // defaultValue={this.props.obj.field.type}\n                onChange={e => this.SelectOptionOnChangeHandeler(e, i)}\n              >\n                {fields[i].options.map(x => (\n                  <Option value={x.value}>{x.label}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }\n      }\n    } else {\n      return <div></div>;\n    }\n    return jsxElementArray;\n  };\n\n  intialStateBuilder = () => {\n    let ElementValues = [];\n\n    if (this.state.form.fields) {\n      let fields = [...this.state.form.fields];\n\n      ElementValues.length = fields.length;\n\n      for (let i = 0; i < fields.length; i++) {\n        if (!fields[i].hasOptions) {\n          switch (fields[i].type) {\n            case \"Text\":\n              ElementValues[i] = \"\";\n              break;\n            case \"Number\":\n              ElementValues[i] = \"\";\n              break;\n            case \"Date\": //do noting to set it undifin\n              break;\n            case \"Location\": //do noting to set it undifin\n              ElementValues[i] = [];\n              break;\n            default:\n              console.log(\"form element not found\");\n          }\n        } else {\n          //do noting to set it undifind\n        }\n      }\n    }\n    this.setState({ ElementValues: ElementValues });\n  };\n\n  inputOnChangeHandeler = e => {\n    //itemid is also index of ElementValues\n    // console.log(e.target.value);\n\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[e.target.getAttribute(\"itemId\")] = e.target.value; //can also get i directly like others\n    this.setState({ ElementValues: ElementValues });\n  };\n  inputNumberOnChangeHandeler = (e, i) => {\n    // console.log(e);\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e;\n    this.setState({ ElementValues: ElementValues });\n  };\n  DatePickerOnChangeHandeler = (e, i) => {\n    // console.log(e._d, i);\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e._d;\n    this.setState({ ElementValues: ElementValues });\n  };\n  LocationOnClickHandeler = (i, newPoints) => {\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = newPoints;\n    this.setState({ ElementValues: ElementValues });\n  };\n  SelectOptionOnChangeHandeler = (e, i) => {\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e;\n    this.setState({ ElementValues: ElementValues });\n  };\n  submitForm = () => {\n    const service = new appService();\n    if (this.checker()) {\n      service\n        .postComplitedFormByClient(this.formatOutput(), this.state.form.id)\n        .then(x => {\n          notification.success({\n            message: this.props.direc === \"rtl\" ? \"عملیات انجام شد\" : \"Success\",\n            description:\n              this.props.direc === \"rtl\" ? \"فرم ارسال شد\" : \"ّform is submited\",\n            placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\"\n          });\n          this.props.history.push(\"/ShowAllForms\");\n        })\n        .catch(e => {\n          notification.error({\n            message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n            description:\n              this.props.direc === \"rtl\"\n                ? \"مشکل در ارسال  به سرور\"\n                : \"connection to server has problem\",\n            placement:\n              this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n            onClick: () => {\n              console.log(\"Notification Clicked!\");\n            }\n          });\n        });\n    } else {\n      notification.error({\n        message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n        description:\n          this.props.direc === \"rtl\"\n            ? \"فیلدهای اجباری پر نشده است\"\n            : \"at least one of mandetory filds is not complited\",\n        placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n        onClick: () => {\n          console.log(\"Notification Clicked!\");\n        }\n      });\n    }\n  };\n  formatOutput = () => {\n    let ElementValues = [...this.state.ElementValues];\n    let fields = [...this.state.form.fields];\n    console.log(this.state.form);\n    let res = {\n      title: this.state.form.title,\n      id: this.state.form.id,\n      type: \"formSubmit by client\",\n      fields: []\n    };\n    let tempRes = [];\n\n    for (let i = 0; i < fields.length; i++) {\n      tempRes.push({ elementName: fields[i].name, answer: ElementValues[i] });\n    }\n    res.fields = tempRes;\n    return res;\n  };\n  checker = () => {\n    let ElementValues = [...this.state.ElementValues];\n    let res = true;\n    let fields = [...this.state.form.fields];\n    for (let i = 0; i < fields.length; i++) {\n      if (fields[i].required === \"true\") {\n        if (\n          !ElementValues[i] ||\n          (ElementValues[i] === \"\" &&\n            ElementValues[i] === 0 &&\n            ElementValues[i] === [])\n        ) {\n          res = false;\n          break;\n        }\n      }\n    }\n    return res;\n  };\n}\n\nexport default ShowSpeceficForm;\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nclass StartPage extends Component {\r\n  state = {};\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        localStorage.setItem(\r\n          this.props.tokenName,\r\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJSb2xlIjoiZmllbGRBZ2VudCIsInVzZXJuYW1lIjoiSm9obiBEb2UiLCJleHAiOjE1Nzk4MTQ1MDUwfQ.7nBllYKIYHoJDvuJvagxVviyFshKCSo51A7ptkI-JgI\"\r\n        );\r\n        window.location.reload();\r\n        // this.props.needsReRenderAfterLogin();\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          backgroundColor: \"#001529\",\r\n          width: \"50%\",\r\n          height: \"300px\",\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n          margin: \"auto\",\r\n          maxWidth: \"100%\",\r\n          maxHeight: \"100%\",\r\n          overflow: \"auto\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            marginLeft: \"50px\",\r\n            marginRight: \"50px\",\r\n            marginTop: \"30px\"\r\n          }}\r\n        >\r\n          <h2\r\n            style={{\r\n              color: \"white\",\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            نرم افزار مدیریت بحران\r\n          </h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"لطفا نام کاربری خود را وارد کنید\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"نام کاربری\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  { required: true, message: \"لطفا رمز خود را وارد کنید\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"کلمه‌ی عبور\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{\r\n                  width: \"60%\",\r\n                  margin: \"0 auto\",\r\n                  display: \"block\",\r\n                  marginTop: \"20px\"\r\n                }}\r\n              >\r\n                ورود\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/commons/navbar\";\nimport ShowAllForms from \"./components/pages/showAllForms\";\nimport { Row, Col } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ShowSpeceficForm from \"./components/pages/showSpeceficForm\";\nimport StartPage from \"./components/pages/startPage\";\nimport { Form } from \"antd\";\nvar jwt = require(\"jsonwebtoken\");\n\nclass App extends React.Component {\n  state = {\n    smallSize: false,\n    isNavbarButtonClicked: false,\n    direc: \"rtl\",\n    formCreaterState: {\n      title: \"Form\",\n      Elements: [],\n      lastId: 0\n    },\n    tokenName: \"token8\"\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    const resizeRes = window.innerWidth <= 780;\n    if (!resizeRes) {\n      this.setState({ isNavbarButtonClicked: false });\n    }\n    this.setState({ smallSize: resizeRes });\n  }\n  render() {\n    const { smallSize } = this.state;\n    if (\n      localStorage.getItem(this.state.tokenName) !== null &&\n      !this.checkIfTokenIsExpired()\n    ) {\n      this.logUserOutInExpirtim();\n      if (smallSize) {\n        return (\n          <div style={{ direction: this.state.direc }}>{this.BigView()}</div>\n        );\n      } else {\n        return (\n          <div style={{ direction: this.state.direc }}>{this.smallView()}</div>\n        );\n      }\n    } else {\n      const WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\n        StartPage\n      );\n      return (\n        <WrappedNormalLoginForm tokenName={this.state.tokenName} />\n        //  <StartPage  />\n      );\n    }\n  }\n\n  smallView = () => {\n    const { direc } = this.state;\n    if (direc === \"rtl\") {\n      return (\n        <div className=\"App\">\n          <Row>\n            <Col span={this.state.isNavbarButtonClicked ? 22 : 20}>\n              <div style={{ margin: \"20px\" }}>\n                {/* <ShowAllForms></ShowAllForms> */}\n                <Switch>\n                  <Route\n                    path=\"/ShowAllForms\"\n                    render={props => (\n                      <ShowAllForms\n                        role={this.getRole()}\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/ShowSpeceficForm/:id\"\n                    render={props => (\n                      <ShowSpeceficForm direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/\"\n                    render={props => (\n                      <ShowAllForms\n                        role={this.getRole()}\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Col>\n            <Col span={this.state.isNavbarButtonClicked ? 2 : 4}>\n              <NavBar\n                smallSize=\"false\"\n                direc={this.state.direc}\n                onDirectChange={this.directHandler}\n                isNavbarButtonClicked={this.navbarButtonResizeViewClickHandler}\n              ></NavBar>\n            </Col>\n          </Row>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Row>\n            <Col span={this.state.isNavbarButtonClicked ? 2 : 4}>\n              <NavBar\n                smallSize=\"false\"\n                direc={this.state.direc}\n                onDirectChange={this.directHandler}\n                isNavbarButtonClicked={this.navbarButtonResizeViewClickHandler}\n              ></NavBar>\n            </Col>\n            <Col span={this.state.isNavbarButtonClicked ? 22 : 20}>\n              <div style={{ margin: \"20px\" }}>\n                {/* <ShowAllForms></ShowAllForms> */}\n                <Switch>\n                  <Route\n                    path=\"/ShowAllForms\"\n                    render={props => (\n                      <ShowAllForms\n                        role={this.getRole()}\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n\n                  <Route\n                    path=\"/ShowSpeceficForm/:id\"\n                    render={props => (\n                      <ShowSpeceficForm direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/\"\n                    render={props => (\n                      <ShowAllForms\n                        role={this.getRole()}\n                        direc={this.state.direc}\n                        {...props}\n                      />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  };\n  BigView = () => {\n    return (\n      <div className=\"App\">\n        <Col>\n          <Row style={{ zIndex: \"1\" }}>\n            <NavBar\n              smallSize=\"true\"\n              direc={this.state.direc}\n              onDirectChange={this.directHandler}\n            ></NavBar>\n          </Row>\n          <Row style={{ zIndex: \"0\" }}>\n            {/* <ShowAllForms></ShowAllForms> */}\n            <Switch>\n              <Route\n                path=\"/ShowAllForms\"\n                render={props => (\n                  <ShowAllForms\n                    role={this.getRole()}\n                    direc={this.state.direc}\n                    {...props}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/ShowSpeceficForm/:id\"\n                render={props => (\n                  <ShowSpeceficForm direc={this.state.direc} {...props} />\n                )}\n              />\n              <Route\n                path=\"/\"\n                render={props => (\n                  <ShowAllForms\n                    role={this.getRole()}\n                    direc={this.state.direc}\n                    {...props}\n                  />\n                )}\n              />\n            </Switch>\n          </Row>\n        </Col>\n      </div>\n    );\n  };\n\n  navbarButtonResizeViewClickHandler = () => {\n    this.setState({ isNavbarButtonClicked: !this.state.isNavbarButtonClicked });\n  };\n  directHandler = () => {\n    const res = this.state.direc === \"rtl\" ? \"ltr\" : \"rtl\";\n    this.setState({ isNavbarButtonClicked: false });\n    this.setState({ direc: res });\n  };\n  formCreaterStateFixHandeler = st => {\n    // console.log(st);\n    this.setState({ formCreaterState: st });\n  };\n\n  checkIfTokenIsExpired() {\n    var isExpired = false;\n\n    var decodedToken = this.getDecodedToken();\n    const secondsSinceEpoch = Math.round(Date.now() / 1000);\n\n    if (decodedToken.payload.exp < secondsSinceEpoch) {\n      isExpired = true;\n    }\n    return isExpired;\n  }\n  getDecodedToken() {\n    const token = localStorage.getItem(this.state.tokenName);\n    var decodedToken = jwt.decode(token, { complete: true });\n    return decodedToken;\n  }\n  logUserOutInExpirtim() {\n    setInterval(() => {\n      if (this.checkIfTokenIsExpired()) window.location.reload();\n    }, 10000);\n  }\n  getRole() {\n    console.log(this.getDecodedToken);\n    return this.getDecodedToken().payload.Role;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}